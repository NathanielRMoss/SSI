# My immediate goal is to create a non-rigid body of commands using JSON 
# to talk to the farm devices, that will check for updates to the JSON, and are usually told 
# no updates, unless a human tells them to via this set of Commands, Settings, Devices, and
# Automatically Running Programs. 
# 
# For now, the "config" will be checked in from two places: A client getting a command, or 
# the server recieving an update to the modified config.ini file on the AWS server.
# 
# Some features of this Object in relation to the server:
# Server will read for delta this file in every main loop, because this file means life and 
# death in the real world, and I fear that if my code is relied upon, correcting the device 
# should be immediate.
# 
# The object is flexible over the internet, which means the command in the stream dictates 
# what will be command and this file is the read-only associated object with C,S,D,ARP. 
# See the server documentation for the command information, since this object is specifically
# CONFIG.INI
# 
#
#


{"FSS": {
    "IMMEDIATE COMMANDS": [
        {
            "ALLOFF": "RUN, STOP",
            "ALLOFFKEY": "1234567890ABCDEF",
            ""
        }],
    "FSS_SETTINGS": [
    {
        "DEVICE_KEY": "1234567890ABCDEF",
        "SENSOR_PIN1": "NAME",
        "SENSOR_PIN2": "NAME",
        "CONTROLLER_1": ["NAME", "MAIN TANK", ""].
        "CONT_1_SETTINGS":
            "SCHEDULE": [
            {
                "CONDITION": ["NONE", "@", ""]    

            }],
    "PROGRAM_DEFAULTS": [
    {

    }],
    }]
}

}
